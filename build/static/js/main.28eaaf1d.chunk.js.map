{"version":3,"sources":["components/Link/CreateLink.js","components/Auth/useFormValidation.js","components/Auth/validateLogin.js","components/Auth/Login.js","components/Auth/ForgotPassword.js","components/Link/SearchLinks.js","components/Link/LinkList.js","components/Link/LinkDetail.js","components/Header.js","components/App.js","serviceWorker.js","index.js"],"names":["CreateLink","props","react_default","a","createElement","useFormValidation","initialState","validate","_React$useState","React","useState","_React$useState2","Object","slicedToArray","values","setValues","_React$useState3","_React$useState4","errors","setErrors","_React$useState5","_React$useState6","isSubmitting","setSubmitting","useEffect","keys","length","console","log","handleSubmit","event","preventDefault","validationErrors","handleBlur","handleChange","persist","previousValues","objectSpread","defineProperty","target","name","value","validateLogin","email","test","password","INITIAL_STATE","Login","_useFormValidation","login","setLogin","className","onSubmit","onChange","type","placeholder","autoComplete","onBlur","disabled","style","background","onClick","prevLogin","ForgotPassword","SearchLinks","LinkList","LinkDetail","withRouter","src","alt","react_router_dom","to","App","components_Header","react_router","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28eaaf1d.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction CreateLink(props) {\n  return <div>CreateLink</div>;\n}\n\nexport default CreateLink;\n","import React from \"react\";\n\nfunction useFormValidation(initialState, validate) {\n  const [values, setValues] = React.useState(initialState);\n  const [errors, setErrors] = React.useState({});\n  const [isSubmitting, setSubmitting] = React.useState(false);\n\n  React.useEffect(() => {\n    if (isSubmitting) {\n      const noErrors = Object.keys(errors).length === 0;\n      if (noErrors) {\n        console.log(\"authenticated\", values);\n        setSubmitting(false);\n      } else {\n        setSubmitting(false);\n      }\n    }\n  }, [errors]);\n\n  function handleChange(event) {\n    event.persist();\n    setValues(previousValues => ({\n      ...previousValues,\n      [event.target.name]: event.target.value\n    }));\n  }\n\n  function handleBlur() {\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const validationErrors = validate(values);\n    setErrors(validationErrors);\n    setSubmitting(true);\n    console.log({ values });\n  }\n\n  return {\n    handleSubmit,\n    handleBlur,\n    handleChange,\n    values,\n    errors,\n    isSubmitting\n  };\n}\n\nexport default useFormValidation;\n","export default function validateLogin(values) {\n  let errors = {};\n\n  // Email Errors\n  if (!values.email) {\n    errors.email = \"Email required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  // Password Errors\n  if (!values.password) {\n    errors.password = \"Password required\";\n  } else if (values.password.length < 6) {\n    errors.password = \"Password must be at least 6 characters\";\n  }\n\n  return errors;\n}\n","import React from \"react\";\nimport useFormValidation from \"./useFormValidation\";\nimport validateLogin from \"./validateLogin\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  password: \"\"\n};\n\nfunction Login(props) {\n  const {\n    handleSubmit,\n    handleBlur,\n    handleChange,\n    values,\n    errors,\n    isSubmitting\n  } = useFormValidation(INITIAL_STATE, validateLogin);\n  const [login, setLogin] = React.useState(true);\n\n  return (\n    <div>\n      <h2 className=\"mv3\">{login ? \"Login\" : \"Create Account\"}</h2>\n      <form onSubmit={handleSubmit} className=\"flex flex-column\">\n        {!login && (\n          <input\n            onChange={handleChange}\n            value={values.name}\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Your name\"\n            autoComplete=\"off\"\n          />\n        )}\n        <input\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.email}\n          name=\"email\"\n          type=\"email\"\n          className={errors.email && \"error-input\"}\n          placeholder=\"Your email\"\n          autoComplete=\"off\"\n        />\n        {errors.email && <p className=\"error-text\">{errors.email}</p>}\n        <input\n          onChange={handleChange}\n          onBlur={handleBlur}\n          value={values.password}\n          className={errors.password && \"error-input\"}\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Choose a secure password\"\n        />\n        {errors.password && <p className=\"error-text\">{errors.password}</p>}\n        <div className=\"flex mt3\">\n          <button\n            type=\"submit\"\n            className=\"button pointer mr2\"\n            disabled={isSubmitting}\n            style={{ background: isSubmitting ? \"grey\" : \"orange\" }}\n          >\n            Submit\n          </button>\n          <button\n            type=\"button\"\n            className=\"pointer button\"\n            onClick={() => setLogin(prevLogin => !prevLogin)}\n          >\n            {login ? \"need to create an account?\" : \"already have an account?\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\n\nfunction ForgotPassword() {\n  return <div>ForgotPassword</div>;\n}\n\nexport default ForgotPassword;\n","import React from \"react\";\n\nfunction SearchLinks() {\n  return <div>SearchLinks</div>;\n}\n\nexport default SearchLinks;\n","import React from \"react\";\n\nfunction LinkList(props) {\n  return <div>LinkList</div>;\n}\n\nexport default LinkList;\n","import React from \"react\";\n\nfunction LinkDetail(props) {\n  return <div>LinkDetail</div>;\n}\n\nexport default LinkDetail;\n","import React from \"react\";\nimport { withRouter, NavLink } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <div className=\"flex\">\n        <img src=\"/logo.png\" alt=\"Hooks News Logo\" className=\"logo\" />\n        <NavLink to=\"/\" className=\"header-title\">\n          Hooks News\n        </NavLink>\n        <NavLink to=\"/\" className=\"header-link\">\n          new\n        </NavLink>\n        <div className=\"divider\">|</div>\n        <NavLink to=\"/top\" className=\"header-link\">\n          top\n        </NavLink>\n        <div className=\"divider\">|</div>\n        <NavLink to=\"/search\" className=\"header-link\">\n          search\n        </NavLink>\n        <div className=\"divider\">|</div>\n        <NavLink to=\"/create\" className=\"header-link\">\n          submit\n        </NavLink>\n      </div>\n      <div className=\"flex\">\n        <NavLink to=\"/login\" className=\"header-link\">\n          login\n        </NavLink>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport CreateLink from \"./Link/CreateLink\";\nimport Login from \"./Auth/Login\";\nimport ForgotPassword from \"./Auth/ForgotPassword\";\nimport SearchLinks from \"./Link/SearchLinks\";\nimport LinkList from \"./Link/LinkList\";\nimport LinkDetail from \"./Link/LinkDetail\";\nimport Header from \"./Header\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app-container\">\n        <Header />\n        <div className=\"route-container\">\n          <Switch>\n            <Route exact path=\"/\" render={() => <Redirect to=\"/new/1\" />} />\n            <Route path=\"/create\" component={CreateLink} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/forgot\" component={ForgotPassword} />\n            <Route path=\"/search\" component={SearchLinks} />\n            <Route path=\"/top\" component={LinkList} />\n            <Route path=\"/new/:page\" component={LinkList} />\n            <Route path=\"/link/:linkId\" component={LinkDetail} />\n          </Switch>\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}